<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mirrorming.blog.mapper.generate.SocialMapper">
  <resultMap id="BaseResultMap" type="cn.mirrorming.blog.domain.po.Social">
    <!--@Table social-->
    <id column="id" property="id" />
    <result column="user_id" property="userId" />
    <result column="name" property="name" />
    <result column="link" property="link" />
    <result column="css_name" property="cssName" />
    <result column="other" property="other" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, `name`, link, css_name, other
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    update social
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.userId}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.name}
        </foreach>
      </trim>
      <trim prefix="link = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.link}
        </foreach>
      </trim>
      <trim prefix="css_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.cssName}
        </foreach>
      </trim>
      <trim prefix="other = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.other}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    update social
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id} then #{item.userId}
          </if>
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id} then #{item.name}
          </if>
        </foreach>
      </trim>
      <trim prefix="link = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.link != null">
            when id = #{item.id} then #{item.link}
          </if>
        </foreach>
      </trim>
      <trim prefix="css_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.cssName != null">
            when id = #{item.id} then #{item.cssName}
          </if>
        </foreach>
      </trim>
      <trim prefix="other = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.other != null">
            when id = #{item.id} then #{item.other}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into social
    (user_id, `name`, link, css_name, other)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId}, #{item.name}, #{item.link}, #{item.cssName}, #{item.other})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Social" useGeneratedKeys="true">
    insert into social
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      user_id,
      `name`,
      link,
      css_name,
      other,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      #{userId},
      #{name},
      #{link},
      #{cssName},
      #{other},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      user_id = #{userId},
      `name` = #{name},
      link = #{link},
      css_name = #{cssName},
      other = #{other},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Social" useGeneratedKeys="true">
    insert into social
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="cssName != null">
        css_name,
      </if>
      <if test="other != null">
        other,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="userId != null">
        #{userId},
      </if>
      <if test="name != null">
        #{name},
      </if>
      <if test="link != null">
        #{link},
      </if>
      <if test="cssName != null">
        #{cssName},
      </if>
      <if test="other != null">
        #{other},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="userId != null">
        user_id = #{userId},
      </if>
      <if test="name != null">
        `name` = #{name},
      </if>
      <if test="link != null">
        link = #{link},
      </if>
      <if test="cssName != null">
        css_name = #{cssName},
      </if>
      <if test="other != null">
        other = #{other},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="cn.mirrorming.blog.domain.po.Social">
    <!--@Table social-->
    <id column="id" property="id" />
    <result column="user_id" property="userId" />
    <result column="name" property="name" />
    <result column="link" property="link" />
    <result column="css_name" property="cssName" />
    <result column="other" property="other" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, `name`, link, css_name, other
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    update social
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.userId}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.name}
        </foreach>
      </trim>
      <trim prefix="link = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.link}
        </foreach>
      </trim>
      <trim prefix="css_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.cssName}
        </foreach>
      </trim>
      <trim prefix="other = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.other}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    update social
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id} then #{item.userId}
          </if>
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id} then #{item.name}
          </if>
        </foreach>
      </trim>
      <trim prefix="link = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.link != null">
            when id = #{item.id} then #{item.link}
          </if>
        </foreach>
      </trim>
      <trim prefix="css_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.cssName != null">
            when id = #{item.id} then #{item.cssName}
          </if>
        </foreach>
      </trim>
      <trim prefix="other = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.other != null">
            when id = #{item.id} then #{item.other}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into social
    (user_id, `name`, link, css_name, other)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId}, #{item.name}, #{item.link}, #{item.cssName}, #{item.other})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Social" useGeneratedKeys="true">
    insert into social
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      user_id,
      `name`,
      link,
      css_name,
      other,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      #{userId},
      #{name},
      #{link},
      #{cssName},
      #{other},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      user_id = #{userId},
      `name` = #{name},
      link = #{link},
      css_name = #{cssName},
      other = #{other},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Social" useGeneratedKeys="true">
    insert into social
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="cssName != null">
        css_name,
      </if>
      <if test="other != null">
        other,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="userId != null">
        #{userId},
      </if>
      <if test="name != null">
        #{name},
      </if>
      <if test="link != null">
        #{link},
      </if>
      <if test="cssName != null">
        #{cssName},
      </if>
      <if test="other != null">
        #{other},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="userId != null">
        user_id = #{userId},
      </if>
      <if test="name != null">
        `name` = #{name},
      </if>
      <if test="link != null">
        link = #{link},
      </if>
      <if test="cssName != null">
        css_name = #{cssName},
      </if>
      <if test="other != null">
        other = #{other},
      </if>
    </trim>
  </insert>
</mapper>