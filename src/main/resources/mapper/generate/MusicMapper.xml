<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mirrorming.blog.mapper.generate.MusicMapper">
  <resultMap id="BaseResultMap" type="cn.mirrorming.blog.domain.po.Music">
    <!--@Table music-->
    <id column="id" property="id" />
    <result column="music_id" property="musicId" />
    <result column="name" property="name" />
    <result column="artist" property="artist" />
    <result column="album_name" property="albumName" />
    <result column="cover" property="cover" />
    <result column="url" property="url" />
    <result column="comment_id" property="commentId" />
    <result column="lrc" property="lrc" />
    <result column="user_id" property="userId" />
    <result column="music_list_id" property="musicListId" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, music_id, `name`, artist, album_name, cover, url, comment_id, lrc, user_id, music_list_id, 
    create_time, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    update music
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="music_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.musicId}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.name}
        </foreach>
      </trim>
      <trim prefix="artist = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.artist}
        </foreach>
      </trim>
      <trim prefix="album_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.albumName}
        </foreach>
      </trim>
      <trim prefix="cover = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.cover}
        </foreach>
      </trim>
      <trim prefix="url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.url}
        </foreach>
      </trim>
      <trim prefix="comment_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.commentId}
        </foreach>
      </trim>
      <trim prefix="lrc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.lrc}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.userId}
        </foreach>
      </trim>
      <trim prefix="music_list_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.musicListId}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    update music
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="music_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.musicId != null">
            when id = #{item.id} then #{item.musicId}
          </if>
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id} then #{item.name}
          </if>
        </foreach>
      </trim>
      <trim prefix="artist = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.artist != null">
            when id = #{item.id} then #{item.artist}
          </if>
        </foreach>
      </trim>
      <trim prefix="album_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.albumName != null">
            when id = #{item.id} then #{item.albumName}
          </if>
        </foreach>
      </trim>
      <trim prefix="cover = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.cover != null">
            when id = #{item.id} then #{item.cover}
          </if>
        </foreach>
      </trim>
      <trim prefix="url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.url != null">
            when id = #{item.id} then #{item.url}
          </if>
        </foreach>
      </trim>
      <trim prefix="comment_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.commentId != null">
            when id = #{item.id} then #{item.commentId}
          </if>
        </foreach>
      </trim>
      <trim prefix="lrc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.lrc != null">
            when id = #{item.id} then #{item.lrc}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id} then #{item.userId}
          </if>
        </foreach>
      </trim>
      <trim prefix="music_list_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.musicListId != null">
            when id = #{item.id} then #{item.musicListId}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id} then #{item.createTime}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id} then #{item.updateTime}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into music
    (music_id, `name`, artist, album_name, cover, url, comment_id, lrc, user_id, music_list_id, 
      create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.musicId}, #{item.name}, #{item.artist}, #{item.albumName}, #{item.cover}, 
        #{item.url}, #{item.commentId}, #{item.lrc}, #{item.userId}, #{item.musicListId}, 
        #{item.createTime}, #{item.updateTime})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Music" useGeneratedKeys="true">
    insert into music
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      music_id,
      `name`,
      artist,
      album_name,
      cover,
      url,
      comment_id,
      lrc,
      user_id,
      music_list_id,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      #{musicId},
      #{name},
      #{artist},
      #{albumName},
      #{cover},
      #{url},
      #{commentId},
      #{lrc},
      #{userId},
      #{musicListId},
      #{createTime},
      #{updateTime},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      music_id = #{musicId},
      `name` = #{name},
      artist = #{artist},
      album_name = #{albumName},
      cover = #{cover},
      url = #{url},
      comment_id = #{commentId},
      lrc = #{lrc},
      user_id = #{userId},
      music_list_id = #{musicListId},
      create_time = #{createTime},
      update_time = #{updateTime},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Music" useGeneratedKeys="true">
    insert into music
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="musicId != null">
        music_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="artist != null">
        artist,
      </if>
      <if test="albumName != null">
        album_name,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="lrc != null">
        lrc,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="musicListId != null">
        music_list_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="musicId != null">
        #{musicId},
      </if>
      <if test="name != null">
        #{name},
      </if>
      <if test="artist != null">
        #{artist},
      </if>
      <if test="albumName != null">
        #{albumName},
      </if>
      <if test="cover != null">
        #{cover},
      </if>
      <if test="url != null">
        #{url},
      </if>
      <if test="commentId != null">
        #{commentId},
      </if>
      <if test="lrc != null">
        #{lrc},
      </if>
      <if test="userId != null">
        #{userId},
      </if>
      <if test="musicListId != null">
        #{musicListId},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="musicId != null">
        music_id = #{musicId},
      </if>
      <if test="name != null">
        `name` = #{name},
      </if>
      <if test="artist != null">
        artist = #{artist},
      </if>
      <if test="albumName != null">
        album_name = #{albumName},
      </if>
      <if test="cover != null">
        cover = #{cover},
      </if>
      <if test="url != null">
        url = #{url},
      </if>
      <if test="commentId != null">
        comment_id = #{commentId},
      </if>
      <if test="lrc != null">
        lrc = #{lrc},
      </if>
      <if test="userId != null">
        user_id = #{userId},
      </if>
      <if test="musicListId != null">
        music_list_id = #{musicListId},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="cn.mirrorming.blog.domain.po.Music">
    <!--@Table music-->
    <id column="id" property="id" />
    <result column="music_id" property="musicId" />
    <result column="name" property="name" />
    <result column="artist" property="artist" />
    <result column="album_name" property="albumName" />
    <result column="cover" property="cover" />
    <result column="url" property="url" />
    <result column="comment_id" property="commentId" />
    <result column="lrc" property="lrc" />
    <result column="user_id" property="userId" />
    <result column="music_list_id" property="musicListId" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, music_id, `name`, artist, album_name, cover, url, comment_id, lrc, user_id, music_list_id, 
    create_time, update_time
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    update music
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="music_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.musicId}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.name}
        </foreach>
      </trim>
      <trim prefix="artist = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.artist}
        </foreach>
      </trim>
      <trim prefix="album_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.albumName}
        </foreach>
      </trim>
      <trim prefix="cover = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.cover}
        </foreach>
      </trim>
      <trim prefix="url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.url}
        </foreach>
      </trim>
      <trim prefix="comment_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.commentId}
        </foreach>
      </trim>
      <trim prefix="lrc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.lrc}
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.userId}
        </foreach>
      </trim>
      <trim prefix="music_list_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.musicListId}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    update music
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="music_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.musicId != null">
            when id = #{item.id} then #{item.musicId}
          </if>
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id} then #{item.name}
          </if>
        </foreach>
      </trim>
      <trim prefix="artist = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.artist != null">
            when id = #{item.id} then #{item.artist}
          </if>
        </foreach>
      </trim>
      <trim prefix="album_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.albumName != null">
            when id = #{item.id} then #{item.albumName}
          </if>
        </foreach>
      </trim>
      <trim prefix="cover = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.cover != null">
            when id = #{item.id} then #{item.cover}
          </if>
        </foreach>
      </trim>
      <trim prefix="url = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.url != null">
            when id = #{item.id} then #{item.url}
          </if>
        </foreach>
      </trim>
      <trim prefix="comment_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.commentId != null">
            when id = #{item.id} then #{item.commentId}
          </if>
        </foreach>
      </trim>
      <trim prefix="lrc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.lrc != null">
            when id = #{item.id} then #{item.lrc}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userId != null">
            when id = #{item.id} then #{item.userId}
          </if>
        </foreach>
      </trim>
      <trim prefix="music_list_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.musicListId != null">
            when id = #{item.id} then #{item.musicListId}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id} then #{item.createTime}
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updateTime != null">
            when id = #{item.id} then #{item.updateTime}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into music
    (music_id, `name`, artist, album_name, cover, url, comment_id, lrc, user_id, music_list_id, 
      create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.musicId}, #{item.name}, #{item.artist}, #{item.albumName}, #{item.cover}, 
        #{item.url}, #{item.commentId}, #{item.lrc}, #{item.userId}, #{item.musicListId}, 
        #{item.createTime}, #{item.updateTime})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Music" useGeneratedKeys="true">
    insert into music
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      music_id,
      `name`,
      artist,
      album_name,
      cover,
      url,
      comment_id,
      lrc,
      user_id,
      music_list_id,
      create_time,
      update_time,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      #{musicId},
      #{name},
      #{artist},
      #{albumName},
      #{cover},
      #{url},
      #{commentId},
      #{lrc},
      #{userId},
      #{musicListId},
      #{createTime},
      #{updateTime},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      music_id = #{musicId},
      `name` = #{name},
      artist = #{artist},
      album_name = #{albumName},
      cover = #{cover},
      url = #{url},
      comment_id = #{commentId},
      lrc = #{lrc},
      user_id = #{userId},
      music_list_id = #{musicListId},
      create_time = #{createTime},
      update_time = #{updateTime},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Music" useGeneratedKeys="true">
    insert into music
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="musicId != null">
        music_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="artist != null">
        artist,
      </if>
      <if test="albumName != null">
        album_name,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="lrc != null">
        lrc,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="musicListId != null">
        music_list_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="musicId != null">
        #{musicId},
      </if>
      <if test="name != null">
        #{name},
      </if>
      <if test="artist != null">
        #{artist},
      </if>
      <if test="albumName != null">
        #{albumName},
      </if>
      <if test="cover != null">
        #{cover},
      </if>
      <if test="url != null">
        #{url},
      </if>
      <if test="commentId != null">
        #{commentId},
      </if>
      <if test="lrc != null">
        #{lrc},
      </if>
      <if test="userId != null">
        #{userId},
      </if>
      <if test="musicListId != null">
        #{musicListId},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id},
      </if>
      <if test="musicId != null">
        music_id = #{musicId},
      </if>
      <if test="name != null">
        `name` = #{name},
      </if>
      <if test="artist != null">
        artist = #{artist},
      </if>
      <if test="albumName != null">
        album_name = #{albumName},
      </if>
      <if test="cover != null">
        cover = #{cover},
      </if>
      <if test="url != null">
        url = #{url},
      </if>
      <if test="commentId != null">
        comment_id = #{commentId},
      </if>
      <if test="lrc != null">
        lrc = #{lrc},
      </if>
      <if test="userId != null">
        user_id = #{userId},
      </if>
      <if test="musicListId != null">
        music_list_id = #{musicListId},
      </if>
      <if test="createTime != null">
        create_time = #{createTime},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime},
      </if>
    </trim>
  </insert>
</mapper>