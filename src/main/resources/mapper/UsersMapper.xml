<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.mirrorming.blog.mapper.auto.UsersMapper">
  <resultMap id="BaseResultMap" type="cn.mirrorming.blog.domain.po.Users">
    <!--@mbg.generated-->
    <!--@Table users-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="register_time" jdbcType="TIMESTAMP" property="registerTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="register_ip" jdbcType="VARCHAR" property="registerIp" />
    <result column="weibo" jdbcType="VARCHAR" property="weibo" />
    <result column="is_freeze" jdbcType="BIT" property="isFreeze" />
    <result column="is_admin" jdbcType="BIT" property="isAdmin" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, email, `password`, `name`, phone, sex, qq, address, score, birthday, description, 
    avatar, register_time, last_update_time, register_ip, weibo, is_freeze, is_admin
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update users
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.email,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.password,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="phone = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.phone,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="sex = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.sex,jdbcType=BIT}
        </foreach>
      </trim>
      <trim prefix="qq = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.qq,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.address,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="score = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.score,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="birthday = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.birthday,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="description = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.description,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="avatar = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.avatar,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="register_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.registerTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="last_update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.lastUpdateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="register_ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.registerIp,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="weibo = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.weibo,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="is_freeze = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.isFreeze,jdbcType=BIT}
        </foreach>
      </trim>
      <trim prefix="is_admin = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.isAdmin,jdbcType=BIT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into users
    (email, `password`, `name`, phone, sex, qq, address, score, birthday, description, 
      avatar, register_time, last_update_time, register_ip, weibo, is_freeze, is_admin
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.email,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, 
        #{item.phone,jdbcType=VARCHAR}, #{item.sex,jdbcType=BIT}, #{item.qq,jdbcType=VARCHAR}, 
        #{item.address,jdbcType=VARCHAR}, #{item.score,jdbcType=INTEGER}, #{item.birthday,jdbcType=TIMESTAMP}, 
        #{item.description,jdbcType=VARCHAR}, #{item.avatar,jdbcType=VARCHAR}, #{item.registerTime,jdbcType=TIMESTAMP}, 
        #{item.lastUpdateTime,jdbcType=TIMESTAMP}, #{item.registerIp,jdbcType=VARCHAR}, 
        #{item.weibo,jdbcType=VARCHAR}, #{item.isFreeze,jdbcType=BIT}, #{item.isAdmin,jdbcType=BIT}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Users" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      email,
      `password`,
      `name`,
      phone,
      sex,
      qq,
      address,
      score,
      birthday,
      description,
      avatar,
      register_time,
      last_update_time,
      register_ip,
      weibo,
      is_freeze,
      is_admin,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{email,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR},
      #{sex,jdbcType=BIT},
      #{qq,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR},
      #{score,jdbcType=INTEGER},
      #{birthday,jdbcType=TIMESTAMP},
      #{description,jdbcType=VARCHAR},
      #{avatar,jdbcType=VARCHAR},
      #{registerTime,jdbcType=TIMESTAMP},
      #{lastUpdateTime,jdbcType=TIMESTAMP},
      #{registerIp,jdbcType=VARCHAR},
      #{weibo,jdbcType=VARCHAR},
      #{isFreeze,jdbcType=BIT},
      #{isAdmin,jdbcType=BIT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      email = #{email,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      qq = #{qq,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      weibo = #{weibo,jdbcType=VARCHAR},
      is_freeze = #{isFreeze,jdbcType=BIT},
      is_admin = #{isAdmin,jdbcType=BIT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="cn.mirrorming.blog.domain.po.Users" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="registerTime != null">
        register_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="registerIp != null">
        register_ip,
      </if>
      <if test="weibo != null">
        weibo,
      </if>
      <if test="isFreeze != null">
        is_freeze,
      </if>
      <if test="isAdmin != null">
        is_admin,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="isFreeze != null">
        #{isFreeze,jdbcType=BIT},
      </if>
      <if test="isAdmin != null">
        #{isAdmin,jdbcType=BIT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null">
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="weibo != null">
        weibo = #{weibo,jdbcType=VARCHAR},
      </if>
      <if test="isFreeze != null">
        is_freeze = #{isFreeze,jdbcType=BIT},
      </if>
      <if test="isAdmin != null">
        is_admin = #{isAdmin,jdbcType=BIT},
      </if>
    </trim>
  </insert>
</mapper>